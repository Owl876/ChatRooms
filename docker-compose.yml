services:
  web:
    # Сборка контейнера web из папки website
    build: ./website
    container_name: website
    networks:
      - app-network
    environment:
      # Переменная окружения для подключения к базе данных
      DATABASE_URL: "postgresql://web_user:password@db/web_database"
    depends_on:
      - db

  chat:
    build: ./chat
    container_name: chat_service
    networks:
      - app-network
    environment:
      DATABASE_URL: "postgresql://chat_user:password@db/chat_database"
    depends_on:
      - db

  db:
    # Используем официальный образ PostgreSQL версии 14
    image: postgres:14
    container_name: db
    environment:
      # Настройка начальных параметров базы данных
      POSTGRES_USER: web_user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: web_database
    # Персистентное хранилище для данных базы данных
    volumes:
      - ./db/dump:/var/lib/postgresql/data  # Монтируем локальную папку для сохранения данных
    networks:
      - app-network

  nginx:
    # Сборка контейнера Nginx из папки nginx
    build: ./nginx
    container_name: nginx
    ports:
      - "80:80"
    networks:
      - app-network
    depends_on:
      - web
      - chat
    volumes:
      - ./nginx/logs:/var/log/nginx  # Монтируем локальную директорию для логов Nginx

# Сеть для связи между контейнерами в пределах одного бриджа
networks:
  app-network:
    driver: bridge

# Персистентный том для базы данных
volumes:
  dump:
    external: false  # Указывает Docker, что том создается автоматически, если не существует
